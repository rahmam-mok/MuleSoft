To read messages from ActiveMQ topics using MuleSoft, you can use the JMS Connector. Here's a basic example flow:

```xml
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
    xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
    http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">

    <!-- Configure JMS connection -->
    <jms:config name="JMS_Config" doc:name="JMS Config" >
        <jms:active-mq-connector brokerURL="tcp://your-activemq-broker-url" />
    </jms:config>

    <!-- Subscribe to ActiveMQ topic -->
    <jms:listener-config name="JMS_Listener_Config" doc:name="JMS Listener Config" >
        <jms:listener-connection
            topicDestinationName="your-topic-name"
            connectionFactory-ref="JMS_Config" />
    </jms:listener-config>

    <!-- Process received messages -->
    <flow name="ProcessMessagesFlow">
        <jms:inbound-endpoint
            connector-ref="JMS_Listener_Config"
            doc:name="JMS"
            exchange-pattern="request-response" />

        <!-- Your message processing logic here -->

        <!-- Close the connection or channel when all messages are consumed -->
        <scripting:component>
            <scripting:script engine="Groovy">
                <![CDATA[
                    if (conditionToCloseConnection) {
                        // Close the JMS connection or channel
                        message.getInvocationProperty("jms.connector").close()
                    }
                ]]>
            </scripting:script>
        </scripting:component>
    </flow>
</mule>
```

Replace placeholders like "your-activemq-broker-url" and "your-topic-name" with your specific ActiveMQ broker URL and topic name. Adjust the message processing logic according to your requirements. The script component checks a condition (replace "conditionToCloseConnection" with your actual condition) and closes the JMS connection or channel when the condition is met.
